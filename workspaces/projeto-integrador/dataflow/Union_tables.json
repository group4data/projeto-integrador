{
	"name": "Union_tables",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "transactions_in",
						"type": "DatasetReference"
					},
					"name": "TransactionsIn"
				},
				{
					"dataset": {
						"referenceName": "transactions_out",
						"type": "DatasetReference"
					},
					"name": "TransactionsOut"
				}
			],
			"sinks": [
				{
					"name": "sink1"
				},
				{
					"name": "sink2"
				}
			],
			"transformations": [
				{
					"name": "derivedColumn1"
				},
				{
					"name": "select1"
				},
				{
					"name": "derivedColumn2"
				},
				{
					"name": "select2"
				}
			],
			"scriptLines": [
				"source(output(",
				"          id as integer,",
				"          cliente_id as integer,",
				"          valor as decimal(10,2),",
				"          data_hora as timestamp",
				"     ),",
				"     allowSchemaDrift: false,",
				"     validateSchema: true,",
				"     limit: 25,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> TransactionsIn",
				"source(output(",
				"          id as integer,",
				"          cliente_id as integer,",
				"          valor as decimal(10,2),",
				"          data_hora as timestamp",
				"     ),",
				"     allowSchemaDrift: false,",
				"     validateSchema: true,",
				"     limit: 25,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> TransactionsOut",
				"TransactionsIn derive() ~> derivedColumn1",
				"derivedColumn1 select(mapColumn(",
				"          id,",
				"          cliente_id,",
				"          valor,",
				"          data_hora",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"TransactionsOut derive() ~> derivedColumn2",
				"derivedColumn2 select(mapColumn(",
				"          id,",
				"          cliente_id,",
				"          valor,",
				"          data_hora",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1",
				"select2 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink2"
			]
		}
	}
}